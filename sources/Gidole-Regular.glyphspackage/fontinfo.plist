{
.appVersion = "3343";
.formatVersion = 3;
customParameters = (
{
name = licenses;
value = "Gidole is dual licensed under OFL (without reserved font name) and MIT license - pick the one you prefer ¯\\_(ツ)_/¯";
},
{
name = licenseURL;
value = "https://raw.githubusercontent.com/larsenwork/Gidole/master/Resources/GidoleFont/License.txt";
},
{
name = versionString;
value = "Version 2.001";
},
{
name = codePageRanges;
value = (
"1252",
"1250"
);
},
{
name = openTypeOS2FamilyClass;
value = (
5,
3
);
},
{
name = panose;
value = (
2,
0,
5,
3,
0,
0,
0,
0,
0,
0
);
},
{
name = fsType;
value = (
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
29,
30,
31,
33,
35,
37,
38,
45,
62
);
},
{
name = vendorID;
value = PfEd;
}
);
date = "2014-12-04 19:46:25 +0000";
familyName = Gidole;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature case;
feature zero;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
feature ss05;
feature ss06;
feature ss07;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_DFLT_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaaboverightcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub i' @CombiningTopAccents by idotless;
	sub j' @CombiningTopAccents by jdotless;
} ccmp_DFLT_1;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub napostrophe by apostrophemod n;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language ROM;
lookup locl_latn_0 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_0;
language MOL;
lookup locl_latn_0;

script latn;
language CAT;
lookup locl_latn_1 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_1;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
sub parenleft by parenleftsuperior;
sub parenright by parenrightsuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "sub colon by colon.case;
sub exclamdown by exclamdown.case;
sub questiondown by questiondown.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub at by at.case;
sub at.ss06 by at.ss06.case;
";
tag = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f j by f_j;
sub f t by f_t;
";
tag = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f by f_f;
sub f i by f_i;
sub f l by f_l;
";
tag = liga;
},
{
automatic = 1;
code = "sub zero by zero.zero;
";
tag = zero;
},
{
automatic = 1;
code = "sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub abreveacute by abreveacute.ss01;
sub abrevedotbelow by abrevedotbelow.ss01;
sub abrevegrave by abrevegrave.ss01;
sub abrevehookabove by abrevehookabove.ss01;
sub abrevetilde by abrevetilde.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub acircumflexacute by acircumflexacute.ss01;
sub acircumflexdotbelow by acircumflexdotbelow.ss01;
sub acircumflexgrave by acircumflexgrave.ss01;
sub acircumflexhookabove by acircumflexhookabove.ss01;
sub acircumflextilde by acircumflextilde.ss01;
sub adieresis by adieresis.ss01;
sub adotbelow by adotbelow.ss01;
sub agrave by agrave.ss01;
sub ahookabove by ahookabove.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub atilde by atilde.ss01;
";
labels = (
{
language = dflt;
value = "Alternate a shape";
}
);
tag = ss01;
},
{
automatic = 1;
code = "sub g by g.ss02;
sub gacute by gacute.ss02;
sub gbreve by gbreve.ss02;
sub gcaron by gcaron.ss02;
sub gcircumflex by gcircumflex.ss02;
sub gcommaaccent by gcommaaccent.ss02;
sub gdotaccent by gdotaccent.ss02;
sub gmacron by gmacron.ss02;
";
labels = (
{
language = dflt;
value = "Alternate g shape";
}
);
tag = ss02;
},
{
automatic = 1;
code = "sub l by l.ss03;
sub lacute by lacute.ss03;
sub lcaron by lcaron.ss03;
sub lcommaaccent by lcommaaccent.ss03;
sub ldot by ldot.ss03;
sub ldotbelow by ldotbelow.ss03;
sub ldotbelowmacron by ldotbelowmacron.ss03;
sub lmacronbelow by lmacronbelow.ss03;
sub lslash by lslash.ss03;
";
labels = (
{
language = dflt;
value = "Alternate l shape";
}
);
tag = ss03;
},
{
automatic = 1;
code = "sub u by u.ss04;
sub uacute by uacute.ss04;
sub ubreve by ubreve.ss04;
sub ucaron by ucaron.ss04;
sub ucircumflex by ucircumflex.ss04;
sub udieresis by udieresis.ss04;
sub udieresisacute by udieresisacute.ss04;
sub udieresiscaron by udieresiscaron.ss04;
sub udieresisgrave by udieresisgrave.ss04;
sub udieresismacron by udieresismacron.ss04;
sub udotbelow by udotbelow.ss04;
sub ugrave by ugrave.ss04;
sub uhookabove by uhookabove.ss04;
sub uhorn by uhorn.ss04;
sub uhornacute by uhornacute.ss04;
sub uhorndotbelow by uhorndotbelow.ss04;
sub uhorngrave by uhorngrave.ss04;
sub uhornhookabove by uhornhookabove.ss04;
sub uhorntilde by uhorntilde.ss04;
sub uhungarumlaut by uhungarumlaut.ss04;
sub umacron by umacron.ss04;
sub uogonek by uogonek.ss04;
sub uring by uring.ss04;
sub utilde by utilde.ss04;
";
labels = (
{
language = dflt;
value = "Alternate u shape";
}
);
tag = ss04;
},
{
automatic = 1;
code = "sub y by y.ss05;
sub yacute by yacute.ss05;
sub ycircumflex by ycircumflex.ss05;
sub ydieresis by ydieresis.ss05;
sub ydotaccent by ydotaccent.ss05;
sub ydotbelow by ydotbelow.ss05;
sub ygrave by ygrave.ss05;
sub yhookabove by yhookabove.ss05;
sub ytilde by ytilde.ss05;
";
labels = (
{
language = dflt;
value = "Alternate y shape";
}
);
tag = ss05;
},
{
automatic = 1;
code = "sub at by at.ss06;
";
labels = (
{
language = dflt;
value = "Alternate @ shape";
}
);
tag = ss06;
},
{
automatic = 1;
code = "sub three by three.ss07;
sub four by four.ss07;
";
labels = (
{
language = dflt;
value = "Alternate 3&4 shape";
}
);
tag = ss07;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1496;
},
{
name = typoDescender;
value = -472;
},
{
name = typoLineGap;
value = 102;
},
{
name = hheaAscender;
value = 1860;
},
{
name = hheaDescender;
value = -460;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 1906;
},
{
name = winDescent;
value = 472;
},
{
name = strikeoutPosition;
value = 528;
},
{
name = strikeoutSize;
value = 100;
},
{
name = underlineThickness;
value = 99;
},
{
name = underlinePosition;
value = -99;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 1331;
},
{
name = subscriptYOffset;
value = 287;
},
{
name = subscriptYSize;
value = 1434;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 1331;
},
{
name = superscriptYOffset;
value = 983;
},
{
name = superscriptYSize;
value = 1434;
}
);
guides = (
{
angle = 270;
pos = (549,512);
},
{
pos = (1024,754);
},
{
pos = (1024,1593);
},
{
pos = (1024,1222);
},
{
pos = (1024,722);
},
{
pos = (1024,115);
},
{
pos = (1024,966);
},
{
pos = (1024,1496);
},
{
pos = (1024,-414);
},
{
pos = (1024,1082);
},
{
pos = (1024,1416);
},
{
pos = (1024,541);
}
);
id = m001;
metricValues = (
{
pos = 1536;
},
{
over = -19;
},
{
over = -19;
},
{
over = -19;
},
{
pos = -512;
},
{
},
{
over = 16;
pos = 1082;
},
{
over = 19;
pos = 1416;
}
);
name = Regular;
}
);
instances = (
{
customParameters = (
{
name = postscriptWeightName;
value = Regular;
}
);
instanceInterpolations = {
m001 = 1;
};
name = Regular;
properties = (
{
key = postscriptFontName;
value = "Gidole-Regular";
},
{
key = postscriptFullNames;
values = (
{
language = dflt;
value = "Gidole Regular";
}
);
},
{
key = styleMapFamilyNames;
values = (
{
language = dflt;
value = "Gidole Regular";
}
);
}
);
}
);
kerningLTR = {
m001 = {
"@MMK_L_A" = {
"@MMK_R_O" = -10;
"@MMK_R_S" = 20;
"@MMK_R_T" = -160;
"@MMK_R_U" = -20;
"@MMK_R_V" = -220;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = 40;
"@MMK_R_t" = -40;
"@MMK_R_u" = -30;
"@MMK_R_v" = -100;
"@MMK_R_y" = -100;
asterisk = -160;
f = -40;
j = 20;
question = -120;
slash = 40;
tbar = -100;
ugrave = -20;
w = -70;
yacute = -115;
zero = -20;
};
"@MMK_L_C" = {
"@MMK_R_A" = 40;
"@MMK_R_O" = -40;
"@MMK_R_T" = 20;
"@MMK_R_a" = -60;
"@MMK_R_o" = -30;
"@MMK_R_t" = -120;
"@MMK_R_u" = -40;
"@MMK_R_v" = -40;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
X = -40;
colon = -40;
egrave = -60;
f = -50;
g = -60;
gcircumflex = -60;
icircumflex = 40;
parenright = -20;
question = 20;
slash = -40;
two = -60;
w = -10;
yacute = -140;
zero = -40;
};
"@MMK_L_E" = {
"@MMK_R_A" = 20;
"@MMK_R_S" = -40;
"@MMK_R_T" = 20;
"@MMK_R_V" = 20;
"@MMK_R_a" = -40;
"@MMK_R_o" = -40;
"@MMK_R_quotesinglbase" = 40;
"@MMK_R_t" = -80;
"@MMK_R_u" = -40;
"@MMK_R_v" = -100;
"@MMK_R_y" = -100;
asterisk = 20;
f = -100;
icircumflex = 80;
slash = 20;
w = -80;
zero = -20;
};
"@MMK_L_G" = {
"@MMK_R_A" = -20;
"@MMK_R_S" = -40;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_quotesinglbase" = -40;
"@MMK_R_t" = -40;
"@MMK_R_v" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
X = -80;
asterisk = -40;
f = -80;
parenright = -20;
question = -20;
slash = -60;
two = -80;
w = -20;
x = -60;
};
"@MMK_L_J" = {
"@MMK_R_A" = -20;
"@MMK_R_J" = -40;
"@MMK_R_quotesinglbase" = -40;
icircumflex = 60;
slash = -60;
};
"@MMK_L_K" = {
"@MMK_R_S" = -20;
"@MMK_R_U" = -20;
"@MMK_R_V" = 20;
"@MMK_R_a" = -30;
"@MMK_R_o" = -30;
"@MMK_R_t" = -120;
"@MMK_R_u" = -100;
"@MMK_R_v" = -160;
"@MMK_R_y" = -160;
agrave = -40;
asterisk = 20;
egrave = -60;
f = -100;
g = -60;
gcircumflex = -60;
icircumflex = 40;
slash = 20;
tbar = -180;
w = -140;
zero = -60;
};
"@MMK_L_L" = {
"@MMK_R_A" = 40;
"@MMK_R_S" = 10;
"@MMK_R_T" = -245;
"@MMK_R_U" = -60;
"@MMK_R_V" = -245;
"@MMK_R_a" = -20;
"@MMK_R_o" = -40;
"@MMK_R_quotesinglbase" = 40;
"@MMK_R_t" = -120;
"@MMK_R_u" = -20;
"@MMK_R_v" = -205;
"@MMK_R_y" = -205;
asterisk = -205;
colon = 40;
f = -100;
question = -80;
slash = 40;
tbar = -180;
ugrave = -40;
w = -160;
zero = -60;
};
"@MMK_L_O" = {
"@MMK_R_A" = -40;
"@MMK_R_J" = -40;
"@MMK_R_quotesinglbase" = -40;
icircumflex = 80;
slash = -40;
two = -40;
};
"@MMK_L_P" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -369;
"@MMK_R_T" = -30;
"@MMK_R_V" = -40;
"@MMK_R_a" = -40;
"@MMK_R_o" = -30;
"@MMK_R_quotesinglbase" = -205;
"@MMK_R_s" = -10;
"@MMK_R_t" = -40;
X = -60;
agrave = -60;
egrave = -40;
gcircumflex = -40;
icircumflex = 100;
sacute = -20;
slash = -140;
two = -60;
};
"@MMK_L_R" = {
"@MMK_R_A" = 20;
"@MMK_R_T" = -30;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_a" = -20;
"@MMK_R_o" = -40;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
X = -40;
asterisk = -40;
colon = 20;
f = -20;
icircumflex = 20;
tbar = -60;
two = -40;
zero = -20;
};
"@MMK_L_S" = {
"@MMK_R_A" = -20;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_quotesinglbase" = -40;
"@MMK_R_t" = -20;
"@MMK_R_v" = -80;
"@MMK_R_y" = -80;
"@MMK_R_z" = -40;
X = -60;
asterisk = -40;
f = -40;
icircumflex = 20;
parenright = -20;
slash = -40;
tbar = -40;
two = -40;
w = -60;
x = -60;
yacute = -140;
zacute = -80;
};
"@MMK_L_T" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -220;
"@MMK_R_O" = -40;
"@MMK_R_S" = -40;
"@MMK_R_T" = 40;
"@MMK_R_V" = 20;
"@MMK_R_a" = -70;
"@MMK_R_o" = -100;
"@MMK_R_quotesinglbase" = -180;
"@MMK_R_s" = -100;
"@MMK_R_t" = -40;
"@MMK_R_u" = -70;
"@MMK_R_v" = -80;
"@MMK_R_y" = -80;
"@MMK_R_z" = -50;
agrave = -130;
asterisk = 40;
colon = -205;
egrave = -130;
gcircumflex = -130;
icircumflex = 60;
m = -50;
nacute = -130;
p = -50;
question = 60;
sacute = -120;
slash = -205;
ugrave = -110;
x = -100;
yacute = -90;
zacute = -120;
zero = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -220;
"@MMK_R_J" = -266;
"@MMK_R_O" = -60;
"@MMK_R_S" = -80;
"@MMK_R_T" = 40;
"@MMK_R_V" = 20;
"@MMK_R_a" = -160;
"@MMK_R_o" = -160;
"@MMK_R_quotesinglbase" = -205;
"@MMK_R_s" = -160;
"@MMK_R_t" = -80;
"@MMK_R_u" = -120;
"@MMK_R_v" = -120;
"@MMK_R_y" = -100;
"@MMK_R_z" = -120;
X = 40;
asterisk = 40;
colon = -205;
egrave = -205;
f = -120;
g = -225;
gcircumflex = -205;
i = -40;
icircumflex = 60;
j = -40;
m = -100;
nacute = -120;
p = -120;
question = 60;
slash = -225;
tbar = -160;
two = 20;
ugrave = -100;
w = -100;
x = -80;
zero = -40;
};
"@MMK_L_a" = {
"@MMK_R_S" = -40;
"@MMK_R_T" = -50;
"@MMK_R_V" = -160;
"@MMK_R_t" = -40;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
asterisk = -110;
f = -20;
parenright = -40;
question = -80;
quotedbl = -60;
v = -40;
x = -20;
y = -40;
yacute = -40;
};
"@MMK_L_c" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -40;
"@MMK_R_V" = -120;
"@MMK_R_o" = -31;
"@MMK_R_t" = -60;
asterisk = 20;
g = -60;
parenright = -40;
question = -60;
x = -20;
};
"@MMK_L_e" = {
"@MMK_R_A" = -30;
"@MMK_R_J" = -40;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -160;
"@MMK_R_a" = -5;
"@MMK_R_quotesinglbase" = -40;
"@MMK_R_v" = -40;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
X = -60;
agrave = -20;
asterisk = -40;
f = -40;
parenright = -40;
question = -80;
quotedbl = -70;
slash = -60;
two = -20;
w = -20;
x = -30;
yacute = -40;
z = -60;
zacute = -60;
};
"@MMK_L_g" = {
"@MMK_R_T" = -50;
"@MMK_R_V" = -120;
j = 51;
parenright = -40;
question = -40;
slash = 40;
};
"@MMK_L_k" = {
"@MMK_R_S" = -20;
"@MMK_R_T" = -50;
"@MMK_R_U" = -20;
"@MMK_R_V" = -100;
"@MMK_R_a" = -20;
"@MMK_R_o" = -40;
"@MMK_R_quotesinglbase" = 20;
"@MMK_R_s" = 20;
"@MMK_R_t" = -80;
"@MMK_R_u" = -10;
X = 20;
asterisk = 40;
egrave = -60;
f = 10;
g = -60;
gcircumflex = -60;
parenright = -40;
quotedbl = 30;
slash = 40;
zero = -20;
};
"@MMK_L_o" = {
"@MMK_R_A" = -20;
"@MMK_R_J" = -20;
"@MMK_R_S" = -20;
"@MMK_R_T" = -100;
"@MMK_R_V" = -160;
"@MMK_R_quotesinglbase" = -20;
"@MMK_R_t" = -30;
"@MMK_R_v" = -30;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
X = -40;
asterisk = -40;
f = -40;
parenright = -40;
question = -80;
quotedbl = -80;
slash = -40;
t = -40;
two = -20;
v = -20;
w = -10;
x = -60;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_quotedblleft" = -110;
};
"@MMK_L_quotedblright" = {
"@MMK_R_A" = -205;
"@MMK_R_J" = -245;
"@MMK_R_O" = -40;
"@MMK_R_S" = -20;
"@MMK_R_T" = 40;
"@MMK_R_V" = 40;
"@MMK_R_a" = -120;
"@MMK_R_o" = -120;
"@MMK_R_quotedblright" = -110;
"@MMK_R_s" = -140;
"@MMK_R_t" = -20;
"@MMK_R_u" = -80;
"@MMK_R_v" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
i = -40;
icircumflex = 120;
j = -40;
m = -80;
nacute = -80;
p = -80;
sacute = -100;
slash = -100;
tbar = -120;
ugrave = -60;
w = -20;
x = -40;
zero = -20;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 40;
"@MMK_R_J" = 40;
"@MMK_R_T" = -205;
"@MMK_R_U" = -40;
"@MMK_R_V" = -205;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = -110;
"@MMK_R_s" = 30;
"@MMK_R_t" = -140;
"@MMK_R_u" = -20;
"@MMK_R_v" = -180;
"@MMK_R_y" = -205;
"@MMK_R_z" = 20;
X = 40;
egrave = -40;
f = -140;
j = 120;
question = -140;
sacute = 20;
slash = 20;
tbar = -160;
two = 40;
w = -140;
zero = -40;
};
"@MMK_L_r" = {
"@MMK_R_A" = -60;
"@MMK_R_J" = -180;
"@MMK_R_T" = 40;
"@MMK_R_V" = -20;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = -160;
"@MMK_R_t" = 20;
"@MMK_R_v" = 40;
"@MMK_R_y" = 20;
X = 30;
asterisk = 80;
egrave = -40;
f = 20;
gcircumflex = -40;
parenright = -40;
question = 40;
slash = -140;
tbar = -20;
two = -40;
w = 20;
x = -20;
};
"@MMK_L_s" = {
"@MMK_R_S" = -40;
"@MMK_R_T" = -60;
"@MMK_R_V" = -140;
"@MMK_R_quotesinglbase" = -10;
"@MMK_R_s" = -10;
"@MMK_R_t" = -40;
"@MMK_R_v" = -10;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
X = -60;
f = -60;
parenright = -40;
question = -40;
quotedbl = -40;
slash = -20;
tbar = -60;
two = -20;
x = -20;
yacute = -10;
};
"@MMK_L_t" = {
"@MMK_R_S" = -40;
"@MMK_R_T" = -245;
"@MMK_R_V" = -120;
"@MMK_R_quotesinglbase" = 40;
"@MMK_R_t" = -40;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
X = -60;
parenright = -40;
};
"@MMK_L_u" = {
"@MMK_R_A" = -30;
"@MMK_R_J" = -20;
"@MMK_R_T" = -70;
"@MMK_R_V" = -120;
"@MMK_R_quotesinglbase" = -20;
X = -60;
parenright = -40;
slash = -40;
two = -20;
};
"@MMK_L_v" = {
"@MMK_R_A" = -100;
"@MMK_R_J" = -160;
"@MMK_R_T" = -80;
"@MMK_R_V" = -30;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = -160;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
X = -40;
asterisk = 40;
egrave = -40;
f = 10;
g = -40;
gcircumflex = -40;
parenright = -40;
quotedbl = 30;
sacute = -10;
slash = -140;
tbar = -40;
two = -20;
};
"@MMK_L_y" = {
"@MMK_R_A" = -100;
"@MMK_R_J" = -140;
"@MMK_R_T" = -80;
"@MMK_R_V" = -30;
"@MMK_R_a" = -20;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = -160;
"@MMK_R_s" = -10;
"@MMK_R_t" = -40;
X = -40;
asterisk = 40;
egrave = -40;
f = 10;
g = -40;
gcircumflex = -40;
parenright = -40;
quotedbl = 30;
slash = -140;
two = -20;
};
"@MMK_L_z" = {
"@MMK_R_A" = 40;
"@MMK_R_S" = -20;
"@MMK_R_T" = -50;
"@MMK_R_V" = -120;
"@MMK_R_a" = -10;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = 10;
"@MMK_R_s" = -10;
"@MMK_R_t" = -40;
"@MMK_R_z" = -20;
X = 20;
agrave = -20;
asterisk = 20;
egrave = -40;
g = -40;
gcircumflex = -40;
parenright = -40;
sacute = -20;
slash = 20;
};
F = {
"@MMK_R_A" = -130;
"@MMK_R_J" = -320;
"@MMK_R_O" = -40;
"@MMK_R_S" = -40;
"@MMK_R_T" = 20;
"@MMK_R_V" = 20;
"@MMK_R_a" = -80;
"@MMK_R_o" = -60;
"@MMK_R_quotesinglbase" = -205;
"@MMK_R_r" = -40;
"@MMK_R_s" = -40;
"@MMK_R_t" = -20;
"@MMK_R_u" = -30;
"@MMK_R_v" = -30;
"@MMK_R_y" = -30;
"@MMK_R_z" = -40;
asterisk = 40;
colon = -80;
f = -40;
gcircumflex = -40;
icircumflex = 60;
j = -40;
m = -40;
nacute = -40;
p = -40;
question = 20;
slash = -180;
w = -20;
x = -60;
yacute = -20;
zero = -40;
};
Q = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -60;
"@MMK_R_V" = -60;
X = -40;
icircumflex = 60;
j = 80;
slash = 20;
two = -40;
};
Thorn = {
"@MMK_R_A" = -140;
"@MMK_R_J" = -120;
"@MMK_R_S" = -40;
"@MMK_R_T" = -245;
"@MMK_R_V" = -160;
"@MMK_R_a" = -40;
"@MMK_R_quotesinglbase" = -120;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
X = -160;
asterisk = -80;
question = -100;
slash = -100;
two = -160;
w = -10;
x = -40;
};
agrave = {
"@MMK_R_T" = -180;
"@MMK_R_V" = -120;
"@MMK_R_v" = -31;
f = -80;
};
ampersand = {
"@MMK_R_T" = -60;
"@MMK_R_U" = -40;
"@MMK_R_V" = -160;
"@MMK_R_o" = -30;
"@MMK_R_s" = 20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -10;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
asterisk = 20;
egrave = -40;
f = -60;
g = -40;
gcircumflex = -40;
parenright = -40;
x = -20;
zero = -40;
};
aogonek = {
"@MMK_R_T" = -245;
"@MMK_R_V" = -205;
"@MMK_R_v" = -31;
f = -80;
parenright = -20;
};
asterisk = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -245;
"@MMK_R_T" = 40;
"@MMK_R_V" = 40;
"@MMK_R_a" = -80;
"@MMK_R_o" = -80;
"@MMK_R_s" = -80;
"@MMK_R_t" = -100;
"@MMK_R_u" = -40;
"@MMK_R_v" = 40;
"@MMK_R_y" = 40;
icircumflex = 120;
m = -40;
nacute = -40;
p = -40;
sacute = -60;
slash = -100;
ugrave = -20;
};
cacute = {
"@MMK_R_T" = -180;
"@MMK_R_V" = -80;
};
ccedilla = {
"@MMK_R_T" = -245;
parenright = -20;
};
dcaron = {
"@MMK_R_O" = -40;
"@MMK_R_a" = -120;
"@MMK_R_o" = -180;
"@MMK_R_s" = -140;
"@MMK_R_t" = -40;
"@MMK_R_u" = -80;
"@MMK_R_v" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
agrave = -80;
egrave = -120;
g = -120;
gcircumflex = -80;
i = -40;
icircumflex = 120;
j = -40;
m = -80;
nacute = -80;
p = -80;
sacute = -100;
slash = -100;
tbar = -120;
ugrave = -60;
w = -20;
x = -40;
};
egrave = {
"@MMK_R_A" = -60;
"@MMK_R_T" = -120;
two = -60;
x = -60;
};
eogonek = {
"@MMK_R_A" = -60;
"@MMK_R_T" = -120;
two = -60;
x = -60;
};
eth = {
"@MMK_R_A" = -40;
"@MMK_R_J" = -20;
"@MMK_R_T" = -180;
"@MMK_R_V" = -120;
"@MMK_R_quotesinglbase" = -20;
X = -60;
parenright = -40;
slash = -40;
two = -40;
};
f = {
"@MMK_R_A" = -30;
"@MMK_R_J" = -100;
"@MMK_R_T" = 60;
"@MMK_R_V" = 40;
"@MMK_R_a" = -10;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = -100;
"@MMK_R_s" = -10;
"@MMK_R_t" = -20;
"@MMK_R_v" = 10;
"@MMK_R_y" = 10;
X = 20;
asterisk = 40;
f = -20;
icircumflex = 80;
parenright = 30;
question = 100;
quotedbl = 40;
slash = -100;
w = 30;
x = 10;
};
five = {
nine = -20;
one = -20;
};
four = {
eight = -20;
five = -20;
nine = -40;
one = -80;
seven = -60;
three = -40;
two = -40;
};
fraction = {
eight.dnom = -30;
four.dnom = -110;
fraction = 100;
six.dnom = -100;
three.dnom = -30;
two.dnom = -30;
};
gcircumflex = {
"@MMK_R_T" = -110;
j = 80;
};
i = {
"@MMK_R_V" = -20;
};
icircumflex = {
"@MMK_R_S" = 100;
"@MMK_R_T" = 40;
"@MMK_R_U" = 80;
"@MMK_R_V" = 80;
X = 100;
asterisk = 120;
j = 80;
nacute = 40;
question = 140;
two = 40;
zero = 80;
};
integral = {
integral = -70;
};
minute = {
minute = -110;
};
nine = {
four = -100;
one = -40;
seven = -40;
six = -40;
three = -40;
two = -60;
};
nine.numr = {
fraction = -100;
};
ograve = {
"@MMK_R_A" = -40;
"@MMK_R_S" = -40;
"@MMK_R_T" = -180;
"@MMK_R_V" = -180;
f = -60;
two = -40;
};
oslash = {
"@MMK_R_A" = -40;
"@MMK_R_T" = -180;
"@MMK_R_V" = -120;
two = -40;
x = -20;
};
parenleft = {
"@MMK_R_S" = -30;
"@MMK_R_a" = -40;
"@MMK_R_o" = -40;
"@MMK_R_s" = -40;
"@MMK_R_t" = -40;
"@MMK_R_u" = -40;
"@MMK_R_v" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
f = -40;
i = -40;
icircumflex = 180;
j = 240;
m = -40;
nacute = -40;
plus = -100;
x = -40;
zero = -30;
};
plus = {
parenright = -100;
};
questiondown = {
"@MMK_R_A" = 40;
"@MMK_R_T" = -245;
"@MMK_R_U" = -60;
"@MMK_R_V" = -205;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = 205;
"@MMK_R_t" = -40;
"@MMK_R_v" = -40;
"@MMK_R_z" = 40;
X = 40;
colon = 120;
f = -40;
g = 120;
gcircumflex = 120;
j = 369;
p = 120;
parenright = 205;
question = -40;
slash = 205;
two = 20;
w = -20;
x = 40;
zero = -60;
};
quotedbl = {
"@MMK_R_a" = -40;
"@MMK_R_o" = -80;
"@MMK_R_s" = -40;
"@MMK_R_v" = 30;
"@MMK_R_y" = 30;
x = 30;
};
quotesingle = {
quotesingle = -110;
};
racute = {
"@MMK_R_A" = -100;
"@MMK_R_V" = 40;
"@MMK_R_a" = -40;
"@MMK_R_v" = 20;
question = 50;
two = -20;
};
sacute = {
"@MMK_R_T" = -100;
two = -40;
};
seven = {
eight = -51;
four = -225;
nine = -31;
six = -174;
two = -40;
zero = -31;
};
seven.numr = {
fraction = -180;
};
six = {
five = -20;
nine = -60;
one = -80;
seven = -80;
three = -31;
two = -60;
};
slash = {
"@MMK_R_A" = -205;
"@MMK_R_J" = -205;
"@MMK_R_O" = -60;
"@MMK_R_S" = -60;
"@MMK_R_T" = 40;
"@MMK_R_V" = 20;
"@MMK_R_a" = -100;
"@MMK_R_o" = -100;
"@MMK_R_quotesinglbase" = -100;
"@MMK_R_s" = -80;
"@MMK_R_t" = -60;
"@MMK_R_u" = -60;
"@MMK_R_v" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
X = 20;
agrave = -80;
colon = -80;
egrave = -80;
f = -80;
gcircumflex = -80;
icircumflex = 60;
m = -60;
nacute = -40;
p = -60;
sacute = -60;
slash = -205;
tbar = -80;
ugrave = -40;
w = -20;
x = -40;
yacute = -20;
zero = -60;
};
three = {
"@MMK_R_A" = -20;
"@MMK_R_J" = -40;
"@MMK_R_T" = -60;
"@MMK_R_V" = -60;
"@MMK_R_quotesinglbase" = -40;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
"@MMK_R_z" = -40;
X = -100;
asterisk = -20;
five = -20;
four = -20;
icircumflex = 40;
one = -20;
parenright = -20;
seven = -60;
slash = -40;
tbar = -80;
three = -40;
two = -60;
x = -20;
};
two = {
"@MMK_R_S" = -20;
"@MMK_R_T" = 20;
"@MMK_R_U" = -20;
"@MMK_R_V" = 20;
"@MMK_R_o" = -20;
"@MMK_R_quotesinglbase" = 40;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
X = 20;
egrave = -40;
eight = -20;
f = -20;
four = -80;
gcircumflex = -40;
icircumflex = 60;
nine = -20;
one = -40;
seven = -60;
six = -40;
slash = 20;
tbar = -160;
three = -20;
ugrave = -40;
w = -10;
yacute = -100;
zero = -30;
};
w = {
"@MMK_R_A" = -70;
"@MMK_R_J" = -100;
"@MMK_R_V" = -20;
"@MMK_R_o" = -10;
"@MMK_R_quotesinglbase" = -140;
egrave = -20;
f = 30;
g = -20;
gcircumflex = -20;
slash = -120;
two = -10;
};
yacute = {
"@MMK_R_T" = -180;
"@MMK_R_V" = -20;
two = -80;
};
zacute = {
"@MMK_R_T" = -180;
"@MMK_R_a" = -20;
"@MMK_R_o" = -40;
"@MMK_R_quotesinglbase" = 20;
"@MMK_R_s" = -20;
};
zero = {
"@MMK_R_A" = -20;
"@MMK_R_J" = -40;
"@MMK_R_T" = -40;
"@MMK_R_V" = -40;
"@MMK_R_quotesinglbase" = -40;
X = -60;
five = -10;
icircumflex = 40;
one = -20;
parenright = -20;
seven = -60;
slash = -60;
three = -60;
two = -60;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
},
{
name = "zone 1";
},
{
name = "zone 2";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright (c) 2015, Andreas Larsen @larsenwork";
}
);
},
{
key = designerURL;
value = "http://gidole.github.io";
},
{
key = licenses;
values = (
{
language = dflt;
value = "Gidole is dual licensed under OFL (without reserved font name) and MIT license - pick the one you prefer ¯\\_(ツ)_/¯";
}
);
},
{
key = licenseURL;
value = "https://raw.githubusercontent.com/larsenwork/Gidole/master/Resources/GidoleFont/License.txt";
},
{
key = vendorID;
value = PfEd;
},
{
key = versionString;
value = "Version 2.001";
}
);
unitsPerEm = 2048;
userData = {
UFOFormat = 3;
};
versionMajor = 2;
versionMinor = 1;
}
